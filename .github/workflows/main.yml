# This is a basic workflow to help you get started with Actions
name: Connect to an AWS role from a GitHub repository

# Controls when the action will run. Invokes the workflow on push events but only for the main branch
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_REGION: "eu-west-2"
  PYTHON_VER: "3.11"
  MANTIS_LIB_NAME: "mantis-core-lib"

# Permission can be added at job level or workflow level
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
jobs:
  AssumeRoleAndCallIdentity:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_SS_MONITOR_IAM_ARN_S3 }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      # Hello from AWS: WhoAmI
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity

      - name: Run docker
        run: |
          docker run -v "$PWD":/var/task "public.ecr.aws/sam/build-python${{env.PYTHON_VER}}" /bin/sh \
            -c "pip install \
            -r requirements.txt \
            --platform=manylinux_2_17_x86_64 \
            --only-binary=:all: \
            -t python/lib/python${{env.PYTHON_VER}}/site-packages/; exit"
          zip -r ${{env.MANTIS_LIB_NAME}}.zip python > /dev/null
          aws s3 cp ${{env.MANTIS_LIB_NAME}}.zip s3://mantis-tmp
